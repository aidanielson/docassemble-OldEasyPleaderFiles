objects:
  - applicants: DAList.using(object_type=Individual, there_are_any=True, complete_attribute='complete')
  - applicants[i].children: DAList.using(object_type=Individual, complete_attribute='complete')
---
code: |
  applicants[i].name.first
  applicants[i].children.gather()
  applicants[i].complete = True
---
code: |
  applicants[i].children[j].name.first
  applicants[i].children[j].complete = True
---
question: What is the ${ ordinal(i) } applicant's name?
fields:
  - Applicant Name: applicants[i].name.first
---
question: Are there more applicants?
yesno: applicants.there_is_another
---
question:  What is the name of ${ applicants[i].possessive(ordinal(j) + ' child') }?
fields:
  - An existing child: applicants[i].children[j]
    datatype: object_radio
    choices: |
      [a for b in [applicant.children.complete_elements() for applicant in applicants.complete_elements()] for a in b if a not in applicants[i].children.complete_elements()]
    disable others: True
    show if:
      code: |
        len([a for b in [applicant.children.complete_elements() for applicant in applicants.complete_elements()] for a in b if a not in applicants[i].children.complete_elements()]) > 0
  - Child's Name: applicants[i].children[j].name.first
---
question: Does ${ applicants[i] } have any children?
yesno: applicants[i].children.there_are_any
---
question: Does ${ applicants[i] } have another another child?
yesno: applicants[i].children.there_is_another
---
mandatory: True
question: Review
subquestion: |
  % for applicant in applicants:
      ${ applicant } 
  % if applicant.children:
      has ${ applicant.children.number_as_word() } child named
    % for child in applicant.children:
      ${ child }
    % endfor
  % else:
      has no children.
  % endif
  % endfor