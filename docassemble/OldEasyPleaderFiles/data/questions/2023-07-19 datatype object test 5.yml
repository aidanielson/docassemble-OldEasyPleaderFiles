mandatory: True
code: |
  contacts.gather()
  final_screen
---
objects:
  contacts: DAList.using(object_type=Individual, there_are_any=True, complete_attribute='complete')
  contacts[i].lawyers: DAList.using(object_type=Individual)
  lawyer_list: DAList.using(object_type=Individual, auto_gather=False, gathered=True)
  all_humans: DAList.using(object_type=Individual, auto_gather=False, gathered=True)
---
code: |
  contacts[i].name.first
  if contacts[i].lawyers.there_are_any:
    contacts[i].lawyers.gather()
  contacts[i].complete = True
---    
question: Contacts
fields:
  - First Name: contacts[i].name.first
  - Last Name: contacts[i].name.last
  - Role: contacts[i].role
    datatype: checkboxes
    choices:
      - King
      - Prince
      - Servant
    none of the above: False
  - Represented by counsel?: contacts[i].lawyers.there_are_any
    datatype: yesno
---
question: Add another contact?
yesno: contacts.there_is_another
---
question: Lawyer(s)
fields: 
  - Existing Lawyer?: contacts[i].lawyers[j]
    datatype: object
    choices: lawyer_list
    disable others: True
    show if: 
      code: |
        len(lawyer_list) > 0
  - First Name: contacts[i].lawyers[j].name.first
  - Last Name: contacts[i].lawyers[j].name.last
validation code: |
  lawyer_list.append(contacts[i].lawyers[j])
---
question: Does ${ contacts[i] } have another lawyer?
yesno: contacts[i].lawyers.there_is_another
---
question: Who is the good guy?
fields:
  - One of these: good_guy
    datatype: object
    choices: contacts
    disable others: True
  - First Name: new_good_guy_first_name
  - Last Name: new_good_guy_last_name
validation code: |
  if good_guy.name.first:
    contacts.appendObject()
    contacts[-1].name.first = new_good_guy_first_name
    contacts[-1].name.last = new_good_guy_last_name
---
code: |
  all_humans = contacts + lawyer_list
---
event: final_screen
question: |
  The contacts are ${ contacts }, and ${ good_guy } is truly a Good Guy!
  All humans are ${ all_humans }.